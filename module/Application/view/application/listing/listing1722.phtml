<?php 
/**
 * ZF2 Buch Kapitel 17
 * 
 * Das Buch "Zend Framework 2 - Das Praxisbuch"
 * von Ralf Eggert ist im Galileo-Computing Verlag erschienen. 
 * ISBN 978-3-8362-2610-3
 * 
 * @package    Application
 * @author     Ralf Eggert <r.eggert@travello.de>
 * @copyright  Alle Listings sind urheberrechtlich geschützt!
 * @link       http://www.zendframeworkbuch.de/ und http://www.galileocomputing.de/3460
 */

/**
 * Listing 17.22 view script
 * 
 * @package    Application
 */

$this->headTitle('Listing 17.22');
$this->pageTitle('Listing 17.22');
?>
<h3><code>UserController</code> stellt öffentlichen Bereich für <code>User</code> Modul bereit</h3>
<pre>
&lt;?php
namespace User\Controller;

use Zend\Http\PhpEnvironment\Response;
use Zend\View\Model\ViewModel;
use Zend\Mvc\Controller\AbstractActionController;
use User\Service\UserServiceInterface;

class UserController extends AbstractActionController
{
    public function indexAction()
    {
        // check for identity
        if (!$this->getUserService()->getAuthentication()->hasIdentity()) {
            // Redirect to login user
            return $this->redirect()->toRoute(
                'user', array('action' => 'login')
            );
        }
        
        $user = $this->getUserService()->getAuthentication()->getIdentity();
        
        return new ViewModel(array(
            'identity' => $user,
        ));
    }
    
    public function loginAction()
    {
        // check for identity
        if ($this->getUserService()->getAuthentication()->hasIdentity()) {
            // Redirect to user
            return $this->redirect()->toRoute('user');
        }
        
        // prepare Post/Redirect/Get Plugin
        $prg = $this->prg(
            $this->url()->fromRoute('user', array('action' => 'login')), 
            true
        );
    
        // check PRG plugin for redirect to send
        if ($prg instanceof Response) {
            return $prg;
    
        // check PRG for redirect to process
        } elseif ($prg !== false) {
            // login with redirected data
            $user = $this->getUserService()->login($prg);
            
            // check user
            if ($user) {
                // add messages to flash messenger
                $this->flashMessenger()->addMessage(
                    $this->getUserService()->getMessage()
                );
                
                // Redirect to show user page
                return $this->redirect()->toRoute('user');
            }
        }
        
        // get form
        $form = $this->getUserService()->getForm('login');
    
        // add messages to flash messenger
        if ($this->getUserService()->getMessage()) {
            $this->flashMessenger()->addMessage(
                $this->getUserService()->getMessage()
            );
        }
        
        // no post or registration unsuccesful
        return new ViewModel(array(
            'form' => $form,
        ));
    }

    public function logoutAction()
    {
        // check for identity
        if ($this->getUserService()->getAuthentication()->hasIdentity()) {
            // logout with redirected data
            $this->getUserService()->logout();
            
            // add messages to flash messenger
            $this->flashMessenger()->addMessage(
                $this->getUserService()->getMessage()
            );
        }
        
        // Redirect to user page
        return $this->redirect()->toRoute('user');
    }

    [...]
}
</pre>
